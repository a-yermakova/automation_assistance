""" Module defining web graphic user interface for Automation assistance. """

import streamlit as st
from io import BytesIO

from automation_assistance import (get_sheetnames_with_binary_stream,
                                   tags_equations_creator,
                                   check_cell_address_input,
                                   add_similar_statement_tags_from_config,
                                   specify_function_for_cell_address_searching)
from automation_assistance_exceptions import EmptyTagCellInModel


def change_app_status(new_status: str = None):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Å—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    Args:
        :param new_status: –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –º–æ–∂–µ—Ç –±—ã—Ç—å "before", "on", "after"
        :type new_status: str
    """
    if new_status:
        st.session_state.status = new_status
    match st.session_state.status:
        case "before":
            page_before_updating()
        case "on":
            page_on_updating()
        case "after":
            page_after_updating()

def page_before_updating():
    """–§—É–Ω–∫—Ü–∏—è GUI –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç
    —Ñ–∞–π–ª—ã —Ñ–æ—Ä–º–∞—Ç–∞ XLSX –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    with column_one:
        st.session_state.model_file = st.file_uploader('–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–π –º–æ–¥–µ–ª–∏',
                                                       type=source, accept_multiple_files=False)
        if st.session_state.model_file:
            st.session_state.model_binary_stream = BytesIO(st.session_state.model_file.getvalue())
            #–ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ XLSX —Ñ–∞–π–ª–∞
            st.session_state.model_sheet_names = get_sheetnames_with_binary_stream(st.session_state.model_binary_stream)
            st.session_state.selected_model_sheet = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–π –º–æ–¥–µ–ª–∏',
                                                                 st.session_state.model_sheet_names)
    with column_two:
        st.session_state.issuer_file = st.file_uploader('–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —ç–º–∏—Ç–µ–Ω—Ç–∞',
                                                        type=source, accept_multiple_files=False)
        if st.session_state.issuer_file:
            st.session_state.issuer_binary_stream = BytesIO(st.session_state.issuer_file.getvalue())
            # –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ XLSX —Ñ–∞–π–ª–∞
            st.session_state.issuer_sheet_names = get_sheetnames_with_binary_stream(
                                                            st.session_state.issuer_binary_stream)
            st.session_state.selected_issuer_sheet = st.selectbox(
                                                        '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ —ç–º–∏—Ç–µ–Ω—Ç–∞',
                                                        st.session_state.issuer_sheet_names)
    if st.button('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É', key='fileprocessing'):
        if st.session_state.model_file and st.session_state.issuer_file:
            with st.spinner('–û–±—Ä–∞–±–æ—Ç–∫–∞...'):
                st.session_state.status = 'on'
                st.experimental_rerun()
        else:
            st.error('–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã', icon="üö®")

def page_on_updating():
    """–§—É–Ω–∫—Ü–∏—è GUI –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–∫–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ –¥–≤—É—Ö —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å,
    –∏ –≤–≤–æ–¥–∏—Ç –∞–¥—Ä–µ—Å–∞ –≤–µ—Ä—Ö–Ω–∏—Ö —è—á–µ–µ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.
    –ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å –ø–æ–º–æ—â—å—é —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π."""
    model_binary_stream = st.session_state.model_binary_stream
    issuer_binary_stream = st.session_state.issuer_binary_stream
    selected_model_sheet = st.session_state.selected_model_sheet
    selected_issuer_sheet = st.session_state.selected_issuer_sheet
    default_model_address_of_start, default_issuer_address_of_start = specify_function_for_cell_address_searching(
                                                                        model_binary_stream,
                                                                        issuer_binary_stream,
                                                                        selected_model_sheet,
                                                                        selected_issuer_sheet)
    with column_one:
        model_address_of_start = st.text_input(label='–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –≤–µ—Ä—Ö–Ω–µ–π —è—á–µ–π–∫–∏ —Å—Ç–æ–ª–±—Ü–∞ —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏\n'
                                               + '–≤ —Ñ–∞–π–ª–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–π –º–æ–¥–µ–ª–∏ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ê1):',
                                               value=default_model_address_of_start)
        statement_block = st.selectbox('–£–∫–∞–∂–∏—Ç–µ –±–ª–æ–∫ —Å—Ç–∞—Ç–µ–π', statement_block_option)
    with column_two:
        issuer_address_of_start = st.text_input(label='–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –≤–µ—Ä—Ö–Ω–µ–π —è—á–µ–π–∫–∏ —Å—Ç–æ–ª–±—Ü–∞ —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏\n'
                                                + '–≤ —Ñ–∞–π–ª–µ —ç–º–∏—Ç–µ–Ω—Ç–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ê1):',
                                                value=default_issuer_address_of_start)
        data_source = st.selectbox('–£–∫–∞–∂–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö', data_source_option)

    if st.button('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É', key='sendtoprocessing'):
        # –ï—Å–ª–∏ –≤–≤–µ–ª–∏ –∞–¥—Ä–µ—Å–∞ —è—á–µ–µ–∫
        if model_address_of_start and issuer_address_of_start:
            # –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –∞–¥—Ä–µ—Å–∞ —è—á–µ–µ–∫ –≤–µ—Ä–Ω—ã–π
            model_address_of_start = check_cell_address_input(model_address_of_start)
            issuer_address_of_start = check_cell_address_input(issuer_address_of_start)
            if model_address_of_start and issuer_address_of_start:
                with st.spinner('–û–±—Ä–∞–±–æ—Ç–∫–∞...'):
                    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π —Å—Ç–∞—Ç–µ–π –∏–∑ –º–æ–¥–µ–ª–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏–º –Ω–∞–∑–≤–∞–Ω–∏–π –∏–∑ —Ñ–∞–π–ª–∞ —ç–º–∏—Ç–µ–Ω—Ç–∞
                    try:
                        st.session_state.list_of_equivalents = tags_equations_creator(
                                                                      model_binary_stream=model_binary_stream,
                                                                      issuer_binary_stream=issuer_binary_stream,
                                                                      selected_model_sheet=selected_model_sheet,
                                                                      selected_issuer_sheet=selected_issuer_sheet,
                                                                      model_address_of_start=model_address_of_start,
                                                                      issuer_address_of_start=issuer_address_of_start
                                                                      )
                        # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–µ–π –∏–∑ –¥—Ä—É–≥–∏—Ö –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥–µ–ª–µ–π (–∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞),
                        # –µ—Å–ª–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏–º —Å—Ç–∞—Ç—å—è—Ö (—Å–ø—Ä–∞–≤–∞ –≤ –∫–æ–Ω—Ñ–∏–≥–µ) –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
                        # —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Å—Ç–∞—Ç—å–∏ —É —ç–º–∏—Ç–µ–Ω—Ç–∞
                        add_similar_statement_tags_from_config(statement_block, data_source,
                                                               st.session_state.list_of_equivalents)
                        st.session_state.status = 'after'
                        st.experimental_rerun()
                    except EmptyTagCellInModel as error:
                        st.error(error, icon='üö®')

            else:
                st.error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å–∏ —è—á–µ–π–∫–∏', icon='üö®')
        else:
            st.error('–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è', icon='üö®')

def page_after_updating():
    """–§—É–Ω–∫—Ü–∏—è GUI –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç
    –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π,
    –∞ —Ç–∞–∫–∂–µ —Å–∫–∞—á–∞—Ç—å –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ .txt."""

    output_text = ''
    for equivalent in st.session_state.list_of_equivalents:
        if len(equivalent.tags_from_config) == 1 and equivalent.model_tag == equivalent.tags_from_config[0]:
            equal_statements = f'{equivalent.model_tag} = {equivalent.tag_from_filling}\n' \
                               f'‚òª –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è!\n'
            output_text += equal_statements + '\n'
        else:
            equal_statements = f'{equivalent.model_tag} = {equivalent.tag_from_filling}\n' \
                               f'‚ñ∫ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –≤: \n'
            statements_to_rename = '\n'.join(equivalent.tags_from_config)
            output_text += equal_statements + statements_to_rename + '\n\n'
    st.text_area('–ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫:', output_text, height=500)
    st.download_button(
        label='–°–∫–∞—á–∞—Ç—å –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞',
        data=output_text,
        file_name='list_of_equivalents.txt',
        mime='text'
        )
    if st.button('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', key='restart'):
        st.session_state.status = 'before'
        st.experimental_rerun()

# ___________________________________________________________________________________________________________________
source = 'xlsx'
statement_block_option = ['–ë–∞–ª–∞–Ω—Å', '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã', '–°–µ–≥–º–µ–Ω—Ç—ã', '–û—Ç—á–µ—Ç –æ –¥–≤–∏–∂–µ–Ω–∏–∏ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤']
data_source_option = ['XLSX', 'PDF', 'XBRL']

st.set_page_config(page_title='Automation assistance',
                   page_icon='üë©‚Äçüéì',
                   layout="wide",
                   initial_sidebar_state="collapsed"
                   )
st.header('Automation assistance', )
column_one, column_two = st.columns((1, 1))
if 'status' not in st.session_state:
    st.session_state.update({'list_of_equivalents': []})
    change_app_status('before')
else:
    change_app_status()

#python -m streamlit run .\automation_web_gui.py
#python -m streamlit run .\ÔøΩÔøΩ_fill_in.py